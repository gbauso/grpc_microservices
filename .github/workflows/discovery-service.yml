name: Discovery Service

on:
  push:
    paths:
      - .github/workflows/discovery-service.yml
      - discovery-service/**
      - discovery-service/grpc_gen/**
    branches: ['master']
  pull_request:
    paths:
      - .github/workflows/discovery-service.yml
      - discovery-service/**
      - discovery-service/grpc_gen/**
defaults:
 run:
  working-directory: ./discovery-service      

jobs:
  push_to_registry:
    environment: prod
    runs-on: ubuntu-latest
    steps:

     - uses: actions/checkout@v3
       with:
        submodules: true
        fetch-depth: 0

     - name: 'Install GitVersion'
       uses: gittools/actions/gitversion/setup@v0.9.11
       with:
         versionSpec: '5.x'

     - name: determine_version
       uses: gittools/actions/gitversion/execute@v0.9.11
       id: gitversion
       with:
         useConfigFile: true
         configFilePath: 'GitVersion.yml'

     - name: Bump version and push tag
       if: github.ref == 'refs/heads/master'
       uses: anothrNick/github-tag-action@1.36.0
       env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CUSTOM_TAG: ${{ steps.gitversion.outputs.SemVer }}

     - uses: actions/setup-go@v3
       with:
        go-version: 1.18.x

     - name: test_code
       run: go test ./... -cover -coverprofile=coverage.out

     - name: send_to_codecov
       uses: codecov/codecov-action@v2
       with:
        files: coverage.out
        directory: ./discovery-service 
        root_dir: ./discovery-service 
        flags: discovery-service 
        name: grpc_microservices 
        verbose: true

     # Docker

     - name: Set up QEMU
       uses: docker/setup-qemu-action@v2

     - name: Set up Docker Buildx
       uses: docker/setup-buildx-action@v2

     - name: Login to DockerHub
       uses: docker/login-action@v2
       with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
     
     - name: Get Docker Tags
       id: docker_tags
       run: |
        MASTER_MAIN_TAG=msexp/discovery-service-master:${{ steps.gitversion.outputs.SemVer }}
        AGENT_MAIN_TAG=msexp/discovery-service-agent:${{ steps.gitversion.outputs.SemVer }}

        if [ "$REF" == "pull_request" ];
        then
          echo "::set-output name=master_tag::$MASTER_MAIN_TAG"
          echo "::set-output name=agent_tag::$AGENT_MAIN_TAG"
        else
          echo "::set-output name=master_tag::$MASTER_MAIN_TAG,msexp/discovery-service-master:latest"
          echo "::set-output name=agent_tag::$AGENT_MAIN_TAG,msexp/discovery-service-agent:latest"
        fi

        echo "::set-output name=master_main_tag::$MASTER_MAIN_TAG"
        echo "::set-output name=agent_main_tag::$AGENT_MAIN_TAG"
       env:
         REF: ${{ github.event_name }}  

     - name: Build and push agent 
       uses: docker/build-push-action@v3
       with:
         context: ./discovery-service
         file: discovery-service/Dockerfile.agent
         push: true
         tags: ${{ steps.docker_tags.outputs.agent_tag }}


     - name: Build and push master 
       uses: docker/build-push-action@v3
       with:
         context: ./discovery-service
         file: discovery-service/Dockerfile.master
         push: true
         tags: ${{ steps.docker_tags.outputs.master_tag }}
     
     # K8S

     - name: Get K8S namespace
       id: k8s_namespace
       run: |
        if [ "$REF" == "pull_request" ];
        then
          echo "::set-output name=namespace::${{ steps.gitversion.outputs.PreReleaseLabel }}-gbauso"
        else
          echo "::set-output name=namespace::gbauso"
        fi
       env:
         REF: ${{ github.event_name }}   
      
     - uses: actions-hub/kubectl@master
       name: Update Discovery Master K8S
       env:
         KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
       with:
         args: set image deployment/discovery discovery=${{ steps.docker_tags.outputs.master_main_tag }} -n=${{ steps.k8s_namespace.outputs.namespace }}

     - uses: actions-hub/kubectl@master
       name: Update Discovery Agent Weather
       env:
         KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
       with:
         args: set image deployment/weather discovery-agent=${{ steps.docker_tags.outputs.agent_main_tag }} -n=${{ steps.k8s_namespace.outputs.namespace }}

     - uses: actions-hub/kubectl@master
       name: Update Discovery Agent Nearby Cities
       env:
         KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
       with:
         args: set image deployment/nearby-cities discovery-agent=${{ steps.docker_tags.outputs.agent_main_tag }} -n=${{ steps.k8s_namespace.outputs.namespace }}
      
     - uses: actions-hub/kubectl@master
       name: Update Discovery Agent Population
       env:
         KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
       with:
         args: set image deployment/population discovery-agent=${{ steps.docker_tags.outputs.agent_main_tag }} -n=${{ steps.k8s_namespace.outputs.namespace }}
