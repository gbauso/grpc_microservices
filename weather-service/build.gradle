buildscript {
  ext.kotlin_version = "1.3.72"
  ext.coroutines_version = "1.3.3"
  ext.protobuf_version = "3.19.1"
  ext.grpc_version = "1.43.0" // CURRENT_GRPC_VERSION
  ext.grpc_kotlin_version = "1.2.0" // CURRENT_GRPC_KOTLIN_VERSION
  ext.koin_version = '2.1.6'

  repositories {
    mavenCentral()
  }
  dependencies {
    classpath "com.google.protobuf:protobuf-gradle-plugin:0.8.18"
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

  }
}

repositories {
  google()
  mavenCentral()
  mavenLocal()
    jcenter()
}

apply plugin: "kotlin"
apply plugin: "com.google.protobuf"

// Generate IntelliJ IDEA's .idea & .iml project files.
// protobuf-gradle-plugin automatically registers *.proto and the gen output files
// to IntelliJ as sources.
// For best results, install the Protobuf and Kotlin plugins for IntelliJ.
apply plugin: "idea"
apply plugin: "application"

dependencies {
  // This
  implementation "io.grpc:grpc-kotlin-stub:$grpc_kotlin_version"

  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"

  // Grpc and Protobuf
  implementation "com.google.protobuf:protobuf-java:$protobuf_version"
  implementation "com.google.protobuf:protobuf-java-util:$protobuf_version"
  implementation "io.grpc:grpc-netty-shaded:$grpc_version"
  implementation "io.grpc:grpc-protobuf:$grpc_version"
  implementation "io.grpc:grpc-stub:$grpc_version"
  implementation "io.grpc:grpc-services:$grpc_version"

  // Java
  compileOnly "javax.annotation:javax.annotation-api:1.2"

  // Google
  implementation "com.google.guava:guava:28.2-jre"

  //kHttp
  implementation "khttp:khttp:1.0.0"

  // Logging
  implementation 'org.slf4j:slf4j-api:1.7.33'

  implementation 'io.github.microutils:kotlin-logging:1.12.5'
  implementation 'ch.qos.logback:logback-core:1.2.10'
  implementation 'ch.qos.logback:logback-classic:1.2.10'
  implementation 'net.logstash.logback:logstash-logback-encoder:7.0.1'

  // Koin
  compile "org.koin:koin-core:$koin_version"

  // compile "org.fluentd:fluent-logger:0.3.4"
  compile "io.prometheus:simpleclient:0.9.0"
  compile "io.prometheus:simpleclient_hotspot:0.9.0"
  compile "io.prometheus:simpleclient_httpserver:0.9.0"
  compile 'io.github.cdimascio:dotenv-kotlin:6.2.2'

}

sourceSets {
    main {
        proto {
            srcDir 'contract'
        }
    }
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:3.14.0" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:$grpc_version" }
        grpckt { artifact = "io.grpc:protoc-gen-grpc-kotlin:$grpc_kotlin_version:jdk7@jar"}
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
            grpckt {}
        }
    }
}

startScripts.enabled = false


task weatherServer(type: CreateStartScripts) {
    mainClassName = "weather.WeatherServerKt"
    applicationName = "weather-server"
    outputDir = startScripts.outputDir
    classpath = startScripts.classpath
}

applicationDistribution.into("bin") {
    from(weatherServer)
    fileMode = 0755
}
